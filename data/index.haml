!!! 5
%html
  %head
    %script{src: "http://cdnjs.cloudflare.com/ajax/libs/jquery/1.7/jquery.min.js"}

    :javascript
      $("td").live('dblclick', function() {
        $(this).closest('tr').toggleClass('highlight');
      });

      // Folding
      $(".task .status").live('click', function(e) {
        e.preventDefault();
        e.stopPropagation();
        var id = $(this).closest('tr').attr('id');
        $(".in_"+id).toggle();
      });

      // Filter by sprints
      $('.sprint-nav a').live('click', function(e) {
        e.preventDefault();
        e.stopPropagation();

        var sprint = $(this).attr('data-sprint');

        $(".tasks tr")
          .hide()
          .filter('.sprint-'+sprint+', .has_sprint-'+sprint).show();
      });

      $('[href="#all"]').live('click', function(e) {
        e.preventDefault();
        $('.tasks tr').show();
      });

      $('[href="#print"]').live('click', function(e) {
        e.preventDefault();
        $('body').addClass('print');
      });


    %style
      :plain
        body {
          background: #eee;
          padding: 0;
          margin: 0; }

        body, td {
          font-family: sans-serif;
          color: #333;
          line-height: 13.5pt;
          font-size: 9pt; }

        h2.table-header {
          padding: 0 0 20px 0;
          margin: 20px auto;
          text-align: center;
          font-family: helvetica neue, sans-serif;
          font-size: 28pt;
          font-weight: 100;
          color: #888;
          text-shadow: 0 1px 0 rgba(250, 250, 250, 0.7); }

        table {
          border: solid 10px #fff;
          box-shadow: 0 1px 10px rgba(0, 0, 0, 0.15);
          padding: 2px;

          background: #fafafa;
          margin: 0 auto 20px auto;
          border-collapse: collapse; }

        table td, table th {
          padding: 5px 10px; }

        /* Columns */
        tr>.task { width: auto; text-align: left; padding-right: 50px; }
        tr>.points { width: 70px; }
        tr>.progress { width: 100px; }
        tr>.sprints { padding-right: 50px; }
        tr>.owner { display: none; }

        /* Indentation */
        .level-1 .task { padding-left: 25px; }
        .level-2 .task { padding-left: 50px; }
        .level-3 .task { padding-left: 75px; }
        .level-4 .task { padding-left: 100px; }

        /* Overrides for parents */
        tr.milestone td.task,
        tr.feature td.task {
          font-weight: bold;
          font-size: 1.1em; }

        tr.milestone td,
        tr.feature td {
          border-top: solid 1px #ccc; }

        tr.subtask .progress .bar {
          display: none; }

        tr.subtask td.points>* {
          display: none; }

        /* Milestone */
        tr.milestone td {
          line-height: 18pt; }

        tr.milestone:not(:first-child) td {
          border-top: solid 3px #777; }

        tr.milestone td.task {
          font-size: 1.2em; }

        /* Header */
        thead {
          display: none; }

        th {
          color: #888; }

        td, th {
          background: #fff; }
        /* Double-click to highlight */
        tr.highlight,
        tr.highlight td {
          background: #fafae0; }

        /* Status box */
        .status {
          display: inline-block;
          width: 12px;
          height: 12px;
          margin: 0 5px 0 0;

          border-radius: 6px;
          box-shadow: inset 0 0 0 1px rgba(0,0,0,0.1), inset 1px 1px 1px rgba(0, 0, 0, 0.1);

          position: relative;
          top: 2px;
          background: #ddd; }

        .parent .status {
          cursor: pointer; }

        .parent .status:hover {
          box-shadow: inset 0 0 0 2px rgba(0, 0, 0, 0.1); }

        /* Progress */
        .progress .number {
          display: none; }

        .progress .bar {
          height: 10px;
          border-radius: 5px;
          box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.05), inset 1px 1px 2px rgba(0, 0, 0, 0.1);
          background: #eee; }

        .progress .bar span {
          box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.05), inset -1px -1px 7px rgba(0, 0, 0, 0.1);
          min-width: 10px;
          display: block;
          height: 10px;
          border-radius: 5px;
          background: #888; }

        .meta {
          white-space: nowrap;
          font-size: 8pt;
          font-weight: normal;
          text-decoration: none;

          background: #eee;
          padding: 1px 5px;
          border-radius: 2px;
          border-bottom: solid 1px #ddd;
          border-right: solid 1px #ddd;

          margin: 0 10px;
          color: #999; }

        a.meta:hover {
          background: #ddd; }

        a.meta:active {
          background: #bbb; }

        span.meta {
          background: #ddd;
          border-bottom: solid 1px #ccc;
          border-right: solid 1px #ccc;
          color: #666; }

        /* Progress */
        td.points {
          text-align: left;
          font-size: 0.9em; }

        td.points .points.done {
          font-weight: bold; }

        td.points .of,
        td.points .points.total {
          color: #888; }

        /* Sprints */
        .sprint-display {
          background: #eee;
          border-radius: 6px;
          height: 12px;
          position: relative; }

        .sprint-display {
          overflow: hidden; }

        .sprint-progress {
          display: block;
          float: left;

          height: 1px;
          border-top-left-radius: 1px;
          border-bottom-left-radius: 1px;
          margin-top: 8px; }

         .sprint-progress {
           background-color: #eee; }
         .sprint-progress:first-child {
           background: -webkit-linear-gradient(left, #eee, #ddd); }
         .sprint-progress:last-child {
           background: -webkit-linear-gradient(left, #ddd, #eee); }

        .sprint-marker {
          display: block;
          float: left;

          background: #ccc;

          min-width: 6px;
          height: 12px;
          line-height: 11px;
          border-radius: 6px;
          float: left;

          font-size: 7pt;
          font-weight: bold;
          color: #777;

          text-shadow: 0 1px 0 rgba(255, 255, 255, 0.4);
          text-align: center;

          margin-top: 3px; }

        .sprint-marker .dash {
          opacity: 0.5; }

        .status-bg-in_progress {
          background: #ea3; }

        .status-bg-done {
          background: #393; }

        .status-bg-done,
        .status-bg-in_progress {
          color: white;
          text-shadow: 0 1px 0 rgba(0, 0, 0, 0.3), 0 1px 2px rgba(0, 0, 0, 0.4); }

        /* Navigation */
        body {
          padding: 80px 0 50px 0; }

        .nav {
          position: fixed;
          top: 0;
          left: 0;
          right: 0;
          z-index: 5;

          padding: 0 20px;
          background: rgba(220, 220, 220, 0.95);
          box-shadow: inset 0 -5px 3px -3px rgba(0, 0, 0, 0.06);

          font-size: 8pt;
          font-family: sans-serif; }

        .nav:after {
          content: '';
          display: table;
          clear: both; }

        .nav ul, .nav li, .nav h4 {
          margin: 0;
          padding: 0;
          list-style-type: none; }

        .nav ul, .nav li, .nav h4, .nav a, .nav .segment {
          float: left; }

        .nav h4 {
          padding: 1px;
          color: #888;
          text-shadow: 0 1px 0 rgba(250, 250, 250, 0.4); }

        .nav ul {
          margin-left: 10px; }

        .nav .segment {
          margin: 0;
          padding: 10px 20px 10px 10px;
          border-left: solid 1px #ccc;
          box-shadow: inset 1px 0 0 #e0e0e0; }

        .nav .segment:first-child {
          box-shadow: none;
          border-left: 0; }

        .nav h4,
        .nav a {
          height: 24px;
          line-height: 24px; }

        .nav a {
          color: #888;
          text-shadow: 0 1px 0 rgba(250, 250, 250, 0.4);
          text-decoration: none;

          display: block;
          padding: 0 10px;
          border: solid 1px rgba(0, 0, 0, 0.1);
          border-radius: 3px; }

        .nav ul a {
          border-radius: 0;
          border-left-width: 0; }

        .nav a:hover {
          background: rgba(250, 250, 250, 0.2); }

        .nav ul li:first-child a {
          border-top-left-radius: 3px;
          border-bottom-left-radius: 3px;
          border-left-width: 1px; }
          
        .nav ul li:last-child a {
          border-top-right-radius: 3px;
          border-bottom-right-radius: 3px; }

        /* Print mode */
        body.print {
          padding: 0;
          background: transparent; }

        body.print .table-header,
        body.print .nav {
          display: none; }

        body.print table {
          box-shadow: none;
          margin-left: 0;
          margin-right: 0;
          border: 0; }

        /* Sprint table */
        table.sprints td {
          padding: 10px; }

        table.sprints td.progress {
          width: 200px; }

        table.sprints td.progress .bar {
          background: #ccc; }

  %body
    .nav
      .segment
        - if list.sprints?
          %h4 Filter by:
          %ul.sprint-nav
            - list.sprints.values.each do |sprint|
              %li
                %a{href: "#sprint-#{sprint.slug}", data: { sprint: sprint.slug }}= sprint.id

          %ul
            %li
              %a{href: '#all'} All

      .segment
        %ul
          %li
            %a{href: '#print'} Export mode


    - if list.sprints?
      %h2.table-header Schedule

      %table.sprints
        - max_points = list.sprints.values.map(&:points).max
        - list.sprints.values.each do |sprint|
          %tr{data: { sprint: sprint.slug }}
            %td.name= sprint.name
            %td.progress
              .bar{style: "width: #{sprint.points*100/max_points}%"}
                - if sprint.percent > 0
                  %span{style: "width: #{(sprint.percent*100).to_i}%"}
              %span.number= "#{(sprint.percent*100).to_i}%"
            %td.points
              %span.points.done= sprint.points_done.round(1).to_s.gsub(/\.0+$/,'')
              %span.of of
              %span.points.total= sprint.points.round(1).to_s.gsub(/\.0+$/,'')
      %br

    %h2.table-header Tasks

    %table.tasks
      %thead
        %tr
          %th.task Task
          %th.owner Owner
          - if list.sprints?
            %th.sprints Schedule
          %th.progress Progress
          %th.points Points

      - list.walk do |task, recurse|

        %tr{id: "task_#{task.id}", class: "#{task.css_class}"}
          %td.task
            %span.status{class: "status-bg-#{task.status}"}
            = task
            - if task.pivotal_id
              %a.meta{href: task.pivotal_url, target: '_blank'}= "PT ##{task.pivotal_id}"
            - if task.trello_id
              %a.meta{href: list.trello_board_url, target: '_blank'}= "Trello ##{task.trello_id}"
            - if task.url
              %a.meta{href: task.url, target: '_blank', class: "ext"}
                != task.url_label ? task.url_label : "&rsaquo;"

            - if task.tags.any?
              - task.tags.each do |tag|
                %span.meta= tag

            - if task.leaf? && task.points != 1
              %span.meta=  ("%.2f" % task.points).gsub(/\.?0+$/,'') + "pts"

          %td.owner
            = task.owner

          - if list.sprints?
            %td.sprints
              - bar = TPS::BarFormatter.new(task)
              - if bar.visible?

                %span.sprint-display
                  - bar.segments.each do |type, (size, sprints)|
                    - if type == :line
                      %span.sprint-progress{style: "width: #{size}px"}
                    - elsif type == :marker
                      %span.sprint-marker{class: "status-bg-#{task.status}", style: "width: #{size}px"}
                        - if sprints.length > 1
                          = sprints.first.id
                          %span.dash<>= "&ndash;"
                          = sprints.last.id

                        - else
                          = sprints.first.id

                  -# %span.sprint-label
                  -#   = bar.label

          %td.progress
            .bar
              - if task.percent > 0
                %span{style: "width: #{(task.percent*100).to_i}%"}
            %span.number= "#{(task.percent*100).to_i}%"

          %td.points
            %span.points.done= task.points_done.round(1).to_s.gsub(/\.0+$/,'')
            %span.of of
            %span.points.total= task.points.round(1).to_s.gsub(/\.0+$/,'')

        - recurse.call  if recurse

